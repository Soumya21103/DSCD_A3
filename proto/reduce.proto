syntax = "proto3";

package Reducer;

service Reducer {
    rpc invokeReducer (invocationRequest) returns (invocationResponse);
    rpc HeartBeat (HeartBeatRequest) returns (HeartBeatResponse);
    rpc gOF (OFRR) returns (OFR);
}

message HeartBeatRequest {
    int32 reducer_id = 1;
}

message HeartBeatResponse {
    int32 reducer_id = 1;
    bool status = 2; // if reducer id match and no other problem exist then returns true else false 
}

message OFRR {
    int64 reducer_id = 1;
    // string out_file_name = 2; // change acordingly can be anything
}
message OFR {
    int32 reducer_id = 1; // id assinged by MASTER helps determine which partition will be assigned to which reducer
    string out_file = 2; // '' if output does not exist
    string content = 3; // empty if output does not exist
}

message centroidKeys {
    int32 centroid_id = 1;
    double x = 2; // TODO: NEED TO EDIT IN REDUCER
    double y = 3;
}
message invocationRequest {
    int32 reducer_id = 1; // id assinged by MASTER helps determine which partition will be assigned to which reducer
    repeated string mapper_socket = 2; // list of socket of mappers format "ip_adress:port_no"
    repeated centroidKeys centroids = 3; // list of centroid in centroid key format
}

message invocationResponse {
    int32 reducer_id = 1; // id assigned id master -1 if invocation fails
    bool status = 2; // True if invocation succesfull else False
}